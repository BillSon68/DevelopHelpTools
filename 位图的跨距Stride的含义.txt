跨距宽度（stride）或叫扫描宽度的含义。
MSDN的示意为: 跨距是单行像素（一个扫描行）的宽度，舍入为一个 4 字节的边界。
如果跨距为正，则位图自顶向下。如果跨距为负，则位图颠倒。用程序员的语言表述，就是: Stride指一个扫描行占用的字节数。
根据BMP格式的标准，Stride一定是4的倍数。比如一个 24x11 的图像，每行的像素信息就是 24*3 = 72, 正好是4的倍数，而一副 21x11的位图，
每行像素信息为 21*3=63, 因为不足4的倍数，所以用1个字节来填充，这样每行像素信息为21*3+1=64字节，
这一个字节在笔记中成为 offset, 所以 offset = BitmapData.Stride - BitmapData.Width * 3

System.Drawing.Bitmap的默认stride是宽的stride
Bitmap宽的stride
bitmap宽的stride是宽*4，但该stride必须是4的倍数。
图像处理中Stride和Width的关系如下　
行有 11 个像素(Width = 11), 对一个 32 位(每个像素 4 字节)的图像, Stride = 11 * 4 = 44. 
但还有个字节对齐的问题, 譬如: 
一行有 11 个像素(Width = 11), 对一个 24 位(每个像素 3 字节)的图像, Stride = 11 * 3 + 3 = 36. 
为什么不是 Stride = 33? 因为它是按 4 字节对齐的. 

例子 一个32位的4通道图片的stride计算
854宽 480高 stride是3424
3424=856*4
3424=(854*32/8)+32-((854*32/8)%32)

例子 一个32位的4通道图片的stride计算
856宽 480高 stride是3424
856可以被4整除，所以计算方法如下
3424=(856*32/8) 

stride应该是宽，扩张到可以被4整除（127扩张到128,97扩张到100）乘以位数（3或者4）

System.Windows.Media.Imaging.Bitmap的stride 
stride = System.Windows.Media.Imaging.BitmapSource.Format.BitsPerPixel * 宽/ 8，不需要是4的倍数


 
 